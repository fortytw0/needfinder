<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Mismatch of Expectations: How Modern Learning Resources Fail Conversational Programmers</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">April</forename><forename type="middle">Y</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computing Science</orgName>
								<orgName type="institution">Simon Fraser University Burnaby</orgName>
								<address>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ryan</forename><surname>Mitts</surname></persName>
							<email>rmitts@sfu.ca</email>
							<affiliation key="aff0">
								<orgName type="department">Computing Science</orgName>
								<orgName type="institution">Simon Fraser University Burnaby</orgName>
								<address>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Philip</forename><forename type="middle">J</forename><surname>Guo</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">Design Lab UC</orgName>
								<address>
									<addrLine>San Diego La Jolla</addrLine>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Parmit</forename><forename type="middle">K</forename><surname>Chilana</surname></persName>
							<email>pchilana@sfu.ca</email>
							<affiliation key="aff0">
								<orgName type="department">Computing Science</orgName>
								<orgName type="institution">Simon Fraser University Burnaby</orgName>
								<address>
									<region>BC</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Mismatch of Expectations: How Modern Learning Resources Fail Conversational Programmers</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1145/3173574.3174085</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.1" ident="GROBID" when="2022-07-22T04:57+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Conversational programmers</term>
					<term>learner-centered design</term>
					<term>programming literacy</term>
					<term>technical conversations K.3.2 Computers and Education: Computer and Information Science Education-literacy, computer science education</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Conversational programmers represent a class of learners who are not required to write any code, yet try to learn programming to improve their participation in technical conversations. We carried out interviews with 23 conversational programmers to better understand the challenges they face in technical conversations, what resources they choose to learn programming, how they perceive the learning process, and to what extent learning programming actually helps them. Among our key findings, we found that conversational programmers often did not know where to even begin the learning process and ended up using formal and informal learning resources that focus largely on programming syntax and logic. However, since the end goal of conversational programmers was not to build artifacts, modern learning resources usually failed these learners in their pursuits of improving their technical conversations. Our findings point to design opportunities in HCI to invent learnercentered approaches that address the needs of conversational programmers and help them establish common ground in technical conversations.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>Considerable research efforts have been devoted to humancomputer interaction (HCI) and computing education research towards lowering the barriers to learning programming. Many of these efforts have contributed innovative tools and approaches to support the programming needs of a variety of learners, such as computer science (CS) students <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b53">53]</ref>, end-user programmers <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b31">32]</ref> and profes-sional programmers <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b12">13]</ref>. A large focus of these projects has been on improving learners' understanding of programming syntax and logic and facilitating interaction with feature-rich programming environments as these are known to present key challenges for new learners.</p><p>Unfortunately, most of what we know about the programming learning process and the challenges that learners face is based on studies of students in the classroom <ref type="bibr" target="#b53">[53]</ref> or professionals in industry <ref type="bibr" target="#b0">[1]</ref>. Only recently have we started seeing studies into informal learning processes among non-traditional populations, such as designers <ref type="bibr" target="#b14">[15]</ref>, high school teachers <ref type="bibr" target="#b42">[43]</ref>, and older adults <ref type="bibr" target="#b21">[22]</ref>. Given this increased diversity in learning needs and the backgrounds and skills of programming learners, there have been increased calls <ref type="bibr" target="#b23">[24]</ref> to better understand the goals of such diverse learners and their interaction with modern learning resources.</p><p>Pushing on this idea of learner diversity, recent work suggests that there is a unique class of learners who are motivated to learn programming, but never actually need to write code <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>. These learners are termed as conversational programmers as they seek to acquire programming skills only to engage more effectively in technical conversations or to improve their job marketability (e.g., in marketing, sales, UI design, or management). Although prior work has established the existence of such a population of conversational programmers at a single technology company <ref type="bibr" target="#b7">[8]</ref> and in the classroom <ref type="bibr" target="#b6">[7]</ref>, do such people exist more broadly in other more diverse settings and similarly learn programming to improve technical conversations? Several other questions also remain unanswered: how do conversational programmers actually approach learning programming when their goal is not to write code? To what extent are their learning approaches similar or different from other non-traditional learners, such as end-user programmers? And, do conversational programmers even find it useful to learn programming to improve their technical conversations?</p><p>In this paper, inspired by the idea of learner-centered design <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b51">51]</ref>, we investigate the learning needs and strategies of conversational programmers. We took a qualitative approach for this investigation and recruited a broad range of people representing different professions in local companies and educational and non-profit institutions (e.g., archivist, artist, entrepreneur, HR coordinator, admin staff, psychologist, event manager, marketing assistant, medical instructor and visual designer). We carried out 23 interviews (14 female) with a diverse set of participants who did not have a formal degree in CS, did not work in an engineering role, and were not required to write code on the job, but had tried to learn programming. Our interviews focused on uncovering the kinds of challenges these conversational programmers faced in technical conversations and how and why they made use of different approaches and modern resources for learning programming. The interviews also probed into the participants' perceptions of whether or not their efforts in learning programming were actually helpful for their conversations or other aspects of their jobs.</p><p>Our key findings illustrate a variety of challenges and misunderstandings that conversational programmers can encounter in technical conversations and that can eventually motivate them to explore programming. However, we found that most conversational programmers often do not know where to even begin the learning process and typically seek recommendations from other programmers or rely on popular web search results. This leads them to invest in formal and informal learning strategies that are typically designed for professional or end-user programmers and heavily focus on syntax and logic issues in code. However, since the end goal of conversational programmers is not to build artifacts, a mismatch ensues between their expectations and what these learning resources offer, with conversational programmers often feeling like they have failed.</p><p>The main contribution of this paper is in providing empirical evidence characterizing the unique learning needs of conversational programmers, how these needs differ from populations of end-user programmers and professional programmers, and how modern learning resources that focus on artifact-creation can fail conversational programmers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RELATED WORK</head><p>Our study builds upon prior work in HCI and computing education that focuses on non-traditional learner populations (e.g., learners who are not CS majors or professional programmers) and how people interact with formal and informal programming learning environments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Studies of non-traditional programmers</head><p>End-user programmers were among the first group of nontraditional programmers to receive attention in the literature. This class of programmers consists of people who write code not for professional software development tasks, but to solve a domain-specific problem or to improve their productivity in a particular domain <ref type="bibr" target="#b31">[32]</ref>. It is estimated that the population of end-user programmers is much larger than professional programmers <ref type="bibr" target="#b47">[47]</ref>, and many studies have been carried out to understand why and how different groups of end-user programmers learn programming. For example, web designers and data scientists write scripts for domain-specific project needs, and they mainly learn by "head-first" and "trial and error" methodologies <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b27">28]</ref> often by consulting books, code examples, blogs, and forums <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b14">15]</ref>.</p><p>Recent studies show that another emerging non-traditional learner population consists of conversational programmers <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>. Past surveys indicate that this population is mainly motivated to learn programming to improve the efficacy of technical conversations and to acquire marketable skillsets. Although there was some indication that conversational programmers at a large technology company were using online resources, courses, books, and help from colleagues to acquire programming skills, prior work does not provide any insights into the actual learning strategies and approaches used by these learners, and whether they actually succeeded in improving their technical conversations. Our work adds insights into how conversational programmers exist in diverse job sectors, how and why they use different learning resources, and how they perceive those available resources. K-12 teachers tasked to teach CS are another group of people who learn programming on-the-job <ref type="bibr" target="#b42">[43,</ref><ref type="bibr" target="#b43">44]</ref>, and they share some similarities with conversational programmers. Although teachers may never need to write code on-the-job <ref type="bibr" target="#b42">[43]</ref>, they still need to understand programming syntax and logic since they need to teach those in class, grade coding assignments, and answer coding-related questions. There is some indication that these teachers can have feelings of isolation in the learning process and may benefit from having their own dedicated learning communities. Our study found similar sentiments amongst conversational programmers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal learning environments for programming</head><p>Formal learning is defined as an activity that has a structured curriculum with clearly defined objectives carried out within a defined schedule, such as a school or college course, or a workshop <ref type="bibr" target="#b52">[52]</ref>. Research on non-CS major students taking intro CS courses <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b56">56]</ref> revealed that not everyone learning programming intends to become a professional programmer, and traditional intro CS courses failed to engage non-CS major students. With growing calls for learner-centered design <ref type="bibr" target="#b23">[24]</ref>, some recent work has explored formal ways of making programming relevant for non-CS students <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b39">40]</ref>. For example, efforts have been made to teach programming skills in the context of media computation <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b24">25]</ref>, and introducing the concepts of natural language processing (NLP) and artificial intelligence (AI) in a non-programming context <ref type="bibr" target="#b34">[35]</ref>.</p><p>In addition to traditional K-12 and college classrooms, MOOCs (Massive Open Online Courses) for programming have become popular among some adult learners <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b59">59]</ref>. Other emerging formal learning environments include coding bootcamps where adults who want to improve their practical coding ability can focus on particular topics for a short period of time. Although these formal learning methods require less of a time investment than college courses, doubts have been raised about whether bootcamps or MOOCs actually work for people who seek to improve their employment prospects <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b54">54]</ref>. Our study further reveals that these formal approaches present cost vs. benefit tradeoffs that are even more acute for conversational programmers, making them less popular among this population of learners.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Informal learning resources for programming</head><p>In contrast to formal learning, informal learning consists of activities that are unstructured, self-directed, and initiated in response to some need, often on-the-job <ref type="bibr" target="#b40">[41,</ref><ref type="bibr" target="#b52">52]</ref>. The learner typically self-manages this type of learning and focuses on improving certain skills or addressing specific gaps in knowledge. In terms of informal ways of learning programming, considerable attention has been paid to investigate how people can learn programming online.</p><p>For example, several studies have examined why and when online interactive coding tutorials are useful <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b35">36]</ref>. Although these tutorials can help learners with artifactcreation needs (e.g., professional or end-user programmers) get started, their utility is perceived to be limited as tutorials are rarely tailored to learners' prior coding knowledge. Our study further shows that even conversational programmers experience feelings of failure with such informal resources, but for different reasons. For example, for conversational programmers the key drawback is that these informal resources focus mostly on syntax and logic issues and provide less conceptual explanations.</p><p>Another class of research has explored informal learning and information seeking behaviors on discussion forums for novice programmers <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b37">38]</ref>. These forums effectively facilitate discussion and peer-to-peer knowledge exchange among learners writing code <ref type="bibr" target="#b37">[38,</ref><ref type="bibr" target="#b46">46,</ref><ref type="bibr" target="#b49">49]</ref>. But, as discussed in prior work <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b39">40]</ref>, we also found that the identity of the user and type of forum can affect how well users participate in these discussions. Furthermore, we found that conversational programmers often felt like "outsiders" in communities targeting artifact creation needs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>METHOD</head><p>To study the learning strategies of conversational programmers, we conducted semi-structured interviews with 23 participants from a variety of backgrounds (Table <ref type="table" target="#tab_0">1</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Participants and Recruitment</head><p>We recruited self-identified conversational programmers through personal connections and snowball sampling, advertising posters at educational organizations, and through mailing lists of local meet-up groups for programming over a 4month period in 2017. Our participants had to fit the following criteria to take part in the interviews: 1) not have a formal degree (or even a minor) in computer science, engineering or IT; 2) not be working in any kind of a software development or engineering role or any role requiring programming on-the-job; and, 3) must have recently tried to learn programming or CS either informally or formally.</p><p>We ended up with 23 study participants (14 female) as we aimed for diversity in job roles, age, and gender. As shown in Table <ref type="table" target="#tab_0">1</ref>, our participants held a variety of positions (e.g., artist, psychologist, pharmacist, entrepreneur, library archivist, bank clerk, medical instructor). They also brought in different levels of experience, ranging from being an intern to a senior manager with 20 years of experience.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The interview instrument</head><p>Before the interview, we collected basic demographic information through a questionnaire (e.g., age, gender, occupation, education and previous experiences with programming languages). We began the interview with some warmup questions. For example, we asked them to describe their current work and recall the most recent situation in which they were required to have a technical conversation.</p><p>Next, we asked questions about their learning process and strategies, focusing on resources they used, in which situation they used those resources, how they knew where to look at resources and to what extent they found the resources to be useful. Initially we used common resources for learning programming to prompt the participants if necessary (e.g., programming courses, books, online documentation, Stack Overflow, MOOCs). After the first five interviews, we updated this list with additional informal resources that came up in the interviews so far (e.g., Wikipedia, articles, news, blogs, magazines, YouTube videos).</p><p>Lastly, we ended the interview by probing into conversational programmers' perceptions of the learning process, asking them to reflect on what they felt they achieved after all their learning efforts and whether (or not) they wanted to keep learning programming in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Data Analysis</head><p>We transcribed the audio recordings and did an open coding of the data using ATLAS.ti. We used an inductive analysis <ref type="bibr" target="#b11">[12]</ref> approach and affinity diagrams to explore the themes around our main research questions. Three members of the research team first began with an open coding pass to individually create a list of potential codes. Upon discussion and use of affinity diagrams, a single coding scheme was devised and two team members independently coded two of the transcripts using this scheme. The first pass inter-rater reliability test achieved a Kappa score of 0.61 as there was some confusion about redundant codes and where they should be used. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ID Age</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>. Our participants from local companies and educational and non-profit institutions represented a diverse range of occupations</head><p>Upon further discussion and iteration with the research team, we revised the coding scheme, merging the potentially overlapping codes and removing the infrequent codes. Next, the two raters applied the revised coding scheme on a new subset of interview transcripts, achieving a higher Kappa score of 0.87. We next used axial coding to discover relationships among emerging concepts, followed by selective coding to identify recurring themes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Presentation of Results</head><p>Our analysis revealed a number of themes and next we focus on presenting key results on why conversational programmers wanted to learn programming, how they approached learning programming, how they perceived and struggled in the learning process, and, paradoxically, why they still had a positive attitude towards learning programming.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>KEY REASONS FOR LEARNING PROGRAMMING</head><p>As shown in Table <ref type="table" target="#tab_0">1</ref>, our study participants were professionals and domain experts in a variety of roles and did not need to write code on-the-job. In their responses to motivations for learning programming, we saw many similar responses to previous studies <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref> of conversational programmers: our participants mainly wanted to learn programming to improve their technical conversations <ref type="bibr">(16/23)</ref> or to enhance their future marketability (7/23). In addition, some participants were interested in using their programming skills to perform enduser programming tasks (5/23), to gain credibility with their technical team members (4/23), and to stay current with digital trends and technology developments (4/23).</p><p>Given that a key motivation for learning programming was improving technical conversations, we first shed light on why our participants found it challenging to converse with developers and other technical personnel.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Challenges in understanding the context of conversations</head><p>Participants commonly reported that they felt lost in understanding the full context of implementation decisions made by software developers that involved low-level details or high-level concepts, such as machine learning.</p><p>Some participants said they found it difficult to follow along and make sense of important technical conversations because they simply did not have a shared vocabulary. For example, an advertising manager described her challenge in interpreting the data that the development team collected for campaign planning:</p><p>We do a lot of the advertising work on the internet and we have programmers who gather data for planning campaigns. I always need to contact them to figure out how they collect it. So, the conversations are very difficult... especially when they mention terminologies around network, database, big data, and algorithms..</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>. I feel like I have to learn from the beginning, and that's why I am learning Python right now. (P9)</head><p>In other cases, conversational programmers were not only required to listen and understand the technical conversations, but also to be able to talk using technical terminology. For example, an entrepreneur from a local start-up company, who was usually invited to give keynotes on innovation strategies or investment pathways, explained how she had to make sure her understanding of certain terminology was "100% accurate":</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>If something was wrong about a technical concept [that I learned], and then if I were to say it in front of people who are world leaders…that would be embarrassing. (P1)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Challenges in building rapport</head><p>In addition to better understanding the context during technical conversations, our participants were motivated to learn programming to build rapport with technical people as well. Our participants' narratives revealed how they often experienced strains in their professional relationships or felt ignored because of their lack of programming knowledge:</p><p>…the programming people tend to be not interested in talking to me. We don't really speak the same language. (P3)</p><p>By learning programming, some participants felt they could gain respect and credibility from their technical teams. For example, a business development manager whose job was to provide customer feedback to developers said:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>…if you can write code or you can understand code, developers respect you more…they would "let you in" …when you're having a conversation it's easier for you to get what you want. (P7)</head><p>Another participant working in a technology consulting company found it useful to socialize with developers by better understanding and making programming-related jokes:</p><p>Our company has a shared space as resources for other companies to use…I became close friends with a number of companies, as well as, a lot of them are our clients as well... Learning some basic syntax, I was able to joke about basic stuff like, "Man, I messed up one comma, and I've messed up my entire code!" Little jokes and nuances that people who know the language can laugh about really helps me start the conversation. (P13)</p><p>In summary, our participants were mainly motivated to learn programming because they believed that it would help them better understand the context of technical conversations and build rapport with technical people on the other side of these conversations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPROACHES USED FOR LEARNING PROGRAMMING</head><p>To investigate how conversational programmers tried learning programming, we focused on eliciting the different approaches and resources that our participants attempted to use.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Beginning the learning process</head><p>Most of our participants (19/23) mentioned that they often did not even know where to start the learning process and their first instinct to learn programming was to ask an expert (e.g., a colleague, friend, or more technical family member):</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I think if I had a programming background, I probably would have been able to find information a lot easier and quicker, but because I had to browse through so much and I didn't understand some of the lingo…so, I found it easier just to ask my developer-colleagues like what website should I go to if I want more information on this [programming language]. (P20)</head><p>In fact, participants reported that they relied on experts throughout the learning process: to confirm the relevance of what they found online, to seek definitions or clarifications of technical terms, or to help them debug the coding problems that were encountered during the learning process.</p><p>Another approach to getting started that participants described was that they would just try to search online and try to follow the top search results. Several participants described how they relied on Google in particular to look up programming-related definitions of terminologies:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>When I google search these terminologies, I click on Wikipedia all the time because Wikipedia pops up quite heavily in the first few search columns. (P13)</head><p>Using guidance from an expert or suggestions from online search, our participants ended up investing in different formal and informal learning approaches described below. Overall, participants mentioned trying out 21 different programming languages (e.g., HTML, CSS, JavaScript, Python, PHP, Ruby, SQL, R, VBA) as well as finding information on over 20 different technical concepts, such as "machine learning", "big data", "cloud computing" and "blockchain".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal and informal learning approaches</head><p>We summarize the key formal and informal learning approaches described by participants in </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PERCEPTIONS OF THE LEARNING PROCESS AND FEELINGS OF FAILURE</head><p>As described above, our participants had engaged in a variety of informal and formal learning strategies based on recommendations from developers or other technical experts or by searching online. In reflecting back on their original motivations to mainly improve technical conversations, unfortunately, most participants felt that they did not get much benefit from investing the time and effort on these programming resources and expressed feelings of failure. In fact, only 6 participants reported that learning programming was useful for technical conversations, and only 3 participants felt confident enough to mention programming as a skill on their CV or during a job interview.</p><p>In this section, we present a synthesis of the six common reasons that conversational programmers felt they failed when using modern learning resources (summarized in Table <ref type="table">3</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Takes too much time</head><p>Since conversational programmers were not required to write code as their regular day job, the time they could commit to learn programming was limited (consistent with other studies on adult learners <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b59">59]</ref>). Whether or not using a certain resource would be time-consuming was a concern raised by most of the participants.</p><p>Although formal approaches provided a systematic learning environment with assistance from an instructor, our participants did not consider them to be practical because they required the most time commitment. For example, most participants (21/23) did not sign up for in-person courses because they felt it was not necessary to take a course or they simply did not have enough time to take it. Even though some participants did sign up for MOOCs and other online courses (6/23) Although informal resources were perceived to be easier to use, they could also be time-consuming because conversational programmers did not have enough background to "have the vocabulary to phrase the questions" (P18). They often ended up spending hours and "finding nothing that's really useful" (P6). For example, one participant complained that going through non-relevant YouTube videos could be a huge time sink:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>So sometimes there might be stuff [in videos] you already know or stuff that you just do not care about. Sometimes it could even be an advertisement. A lot of garbage, no kidding. But you only know it after watching [the whole video]. (P14)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Too much focus on syntax and logic</head><p>In their initial learning approach, conversational programmers were influenced by many preconceptions such as, "to learn programming, you have to write code. It's just like learning to drive a car, you cannot learn without running a car" (P18), or they feel like they "have to start from the beginning" (P8). Therefore, the majority of participants (18/23) had devoted some time to learn to code in a specific language. However, after signing up for an online course or using online tutorials to learn a specific programming language, not many participants found it helpful enough with building common ground in technical conversations. For example, P11 admitted that going through the online coding tutorials did not help so much with understanding the big picture:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I think they [coding tutorials] were very good like instructional-ly… But, what I definitely needed is to be able to talk…just being able to write code, I find that I am missing out on some kind of larger understanding. (P11)</head><p>Another participant who paid time and money to attend an introductory level bootcamp mentioned that she "wouldn't take it again" because she felt that these bootcamps were designed for people pursuing careers as software developers and often became more technical than she expected:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>It [the bootcamp] was overwhelming…the coding skills they taught is to enable somebody to parachute into a web development job...not what I expected...(P6)</head><p>One of our participants who was a university administrative staff and worked closely with students in CS, described her experience after attending a coding workshop in Python:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I did the "Python Ladies Learning Code", an all-day introductory workshop…I thought it was obviously super helpful for me to understand a little bit about programming since I'm talking to CS major students all the time... But I don't know if it actually helps. I mean it's so basic level coding, right? Although I had several lines of codes working and printed sentences on the screen in that workshop, I can't recall anything tangible now. (P15)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Explanations are not relevant</head><p>Several participants mentioned that when they were interacting with programming-related resources, their main goal was to seek conceptual and application-related explanations:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>… when I am learning about cache and cookies [on online documentation], I don't want to know if I have to use 'loop' or 'if-else' or anything like that, I want to know what it can do for me, like the user side of it. (P9)</head><p>Participants gave up on resources that did not give enough information on the bigger picture of concepts:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I have given up on a YouTube channel because they were deviating from what I want to learn and they were getting like a lot deeper than I wanted. And especially that channel was like for people who want to do the programming…they spent less time for the bigger concept. (P5)</head><p>Understanding the limitations and benefits of programming or technology choices was important for conversational programmers, but such explanations were not always available in programming learning resources:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>...if they [developers] are saying, "Oh, we are going to use a library X to do this", I think it would be good to know, ok…what does that mean, how much time and money does it take to use library X, how much does it improve performance of the database? I searched [for] any websites that have the information out there, and haven't really seen anything related to that. (P20)</head><p>In addition to the limitations and benefits, participants mentioned that they also needed to know the difference between certain terms or to connect the terms to a working process:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sometimes I need to know like how it's different from something else or how it relates to something else. For example, like machine learning and deep learning.... I saw a blog on that, talking about...like neural networks... I can't remember, but like very technical and low-level explanations. (P15)</head><p>Lastly, participants also sought explanations on software engineering processes and development structures. For example, one participant who was an HR coordinator explained how she wanted to know about "how development teams are structured" since she was "in charge of hiring and interviewing future developers to the company." (P14).</p><p>Since the target users of introductory learning resources are traditional programmers who will build artifacts <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b54">54]</ref>, most of these resources concentrate on teaching syntax and logic, and problem solving skills. As a result, conversational programmers in our study struggled to find relevant conceptual and application-related explanations in these resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Difficult to assess the content's reliability</head><p>Professional programmers or end-user programmers who write code can often use "trial and error" to verify whether a tip or suggestion from a learning resource actually works in code <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b29">30]</ref>. However, conversational programmers explained that they did not have the opportunity use "trial and error" in conversations and the stakes were higher in getting accurate definitions and explanations from a resource.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Although online search was popular among conversational programmers, they did not often trust the search results and still wanted confirmation from colleagues or friends:</head><p>There is so much garbage on the internet that if you search something that does not look like an incredible website then I want to verify it with human being. And all my colleagues would just be like, "Hey, stop googling it!" (P1)</p><p>Participants also doubted the credibility of communitybased sites. For example, only half of the participants who tried forums (8/16) felt that they got anything useful from forums-the rest had strong negative opinions:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>…when I browse the questions [on forums], the people who originally posted do not give follow-up details on whether the answers worked or not…I understand part of it and then I am not sure if the person actually got it [to work]…(P9)</head><p>In addition, participants raised concerns about whether or not to trust the accuracy of the content being presented in other resources, such as YouTube videos. One participant who was a marketing coordinator expressed doubts on the utility of watching free videos and stated a preference for instead relying on paid courses on sites like Lynda.com:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>It's hard to gauge if these people [video authors] are professionals or if this is an accurate way of doing it. So I use Lynda.com now, our company has a subscription for that and lots of my colleagues are using it. (P8)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Feelings of social isolation</head><p>Since most of our participants were domain experts in a nontechnical role, they tended to stay away from certain resources because they felt uncomfortable, stressful, and isolated in environments where the target learners were perceived to be more experienced or even professional programmers.</p><p>One of the participants who attended a bootcamp found it stressful to keep up with people who already had some knowledge of programming:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Because my classmates were not newbies at what they were learning...the level that I had to try to reach to them [was hard] … I was constantly trying to catch up and understand. (P6)</head><p>Despite the convenience of relying on experts, some participants described the social cost of bothering people who were already overworked by asking them naive questions. For example, one participant who was learning through Codecademy said that he would never ask any of his developer colleagues for help:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I mean, I know any one of my colleagues could solve any of my problems, in about six seconds. But the point is not to ... They already have their own work to do and for me, this is again, it's not critical to what I do, and it's not worth spending the company resources to do that. And again, my friends know I don't code, so they don't want to help me with that. (P17)</head><p>Sometimes when conversational programmers referred to an expert for help, they were hesitant to ask follow-up questions because they "did not want to look stupid" (P8). One participant even said that, "I pretend I kind of understand what he [the expert] is talking about and rather figure it out later by myself" (P4). It could also be embarrassing to ask an expert to re-explain a concept he or she had previously described: What I hate is like they explain it to me and I still don't get it. That's the worst. Because with the internet, it doesn't matter. I can keep googling. With people, it's just, I don't know, it's a little embarrassing. (P15) When using online learning resources and forums where there was less of a direct social cost, participants reported that sometimes they still felt like an outsider. None of the participants had contributed to developers' communities like Stack Overflow. Their general perceptions were negative:</p><p>[Stack Overflow] They're often populated by developers, not for the lay person. So again, the assumption that you understand concepts and things already to a certain level is already inherent in there. And quite frankly, a lot of developers are jerks. It can be pretty toxic. Some people are even like "Okay, this is not the place you should ask". (P13)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Easy to forget details without a direct application</head><p>Lastly, participants had feelings of failure when trying to learn programming as they tended to forget what they learned over time.</p><p>For example, one participant who tried Codecademy to learn JavaScript said he would not do it again because he kept forgetting the concepts without applying the knowledge:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Programmers learn and write code on a regular basis. But if you don't use it, you just forget it. So why would I put the effort to learn something that would then just get incredibly rusty and then forget half of it in six months anyway? (P17)</head><p>Similarly, another participant who took an introductory course to learn "fundamentals of HTML" on Lynda.com said that it was easy for him to forget the concepts because he skipped the coding exercises for the sake of time:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>They [Lynda.com] have optional exercises after each lecture... But I mean all I want is just some conceptual level understanding of what's going on. So I skipped the exercise. Sometimes you are just like "It looks easy. I'll just test it later" and then you never do. It turns out that I just forget the concepts very quick. (P8)</head><p>In some cases, conversational programmers could retain what they learned for a short-term project or to satisfy an immediate need, but not beyond. For example, an entrepreneur who once hired developers to build a website for her company explained this phenomenon:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I only learn it when I need to use it. And then I promptly forget it all. When we built our company's first website, I spent like 3 days locked in my room to learn some basic stuff like Word-Press, HTML. But I can't recall anything now at all because I didn't use it for a long time. (P1)</head><p>Sometimes participants learned terminologies in technical conversations but would forget them after the first exposure. For example, one participant explained how he had to:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>...look up the term again a month later because I just skimmed the first paragraph to get a general idea [the first time] …but, I forgot a lot afterwards...(P13)</head><p>In addition, one participant even felt nervous when she tried to recall the definition of a "database", which she had learned recently from a coding bootcamp:</p><p>My palms are sweating...I am just nervous because I learned [about databases] two ago and I cannot remember much right now. I might have to sign up for the same course again. (P6)</p><p>As shown above, there were six key reasons why conversational programmers developed feelings of failure in their pursuit of learning programming (summarized in Table <ref type="table">3</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>THE PARADOX OF LEARNING PROGRAMMING</head><p>In the previous section, we examined how conversational programmers approached learning programming and how most of them felt like they failed, even after investing a lot of time and effort. However, our findings reveal an interesting paradox in the participants' perceptions of programming: despite feelings of failure in their attempts to improve technical conversations, the majority (19/23) still wanted to keep learning programming in the future if appropriate learning resources were available. For example, a product manager described this as, "a short path with acceptable opportunity cost" (P13). Another participant reported that she only wanted to learn what is related with her project in the future:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I will definitely keep learning [programming] in the future, because then you have a better understanding of the terminology that's being used, and it saves much work for your job. But I don't want to start everything from scratch, it's like a deep pool. I only want to learn what's related with my project. (P19)</head><p>A common reason identified by the participants was that having some background in programming allowed them to better understand work of their technical team members and build empathy for them:</p><p>[programming] doesn't help so much with the technical conversation..</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>. But I do have the feeling now that their [developers'] work is extremely hard after I learned. I think it's given me a lot more empathy on understanding that it's not easy to do what you want just because you envision being able to do it. (P7)</head><p>Another advantage of learning programming was having a better sense of being able to estimate implementation time:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I feel like I'm much more generous in terms of time now. I understand it might take forever to write the small change. It's a struggle to write even a little bit of code. It's all about debugging and unknown errors. (P8)</head><p>Moreover, participants felt that they earned more respect from developers as well. Learning programming helped them gain credibility and build rapport with developers:</p><p>The programming people tend to be not interested in talking to me [before]…Being a coder is a badge of honor, people respect me more <ref type="bibr">[</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>now]. (P3)</head><p>Although the majority of participants failed in learning programming, a small number of them did achieve success using resources where they could connect with other conversational programmers. For example, a participant who was a visual designer actively searched and reached out to other designers who were learning programming: "I'm on a Slack group, and all of th ese Facebook groups and LinkedIn groups". (P2)</p><p>Another participant who worked as a library archivist and collaborated with developers on a project to digitize materials explained how she benefited by being in the same room as other archivists and librarians learning programming:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I think we often don't receive enough training…and so those sorts of [technical] workshops are great. It is a nice opportunity to work through problems with other people who also need this skill and don't have the background in it. It's nice to have someone in a similar situation as me to talk to. (P11)</head><p>In summary, our findings reveal a paradox in conversational programmers' perceptions of programming in that while they feel like they failed, they still acknowledged the value of learning programming under certain circumstances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DISCUSSION</head><p>Our findings overall illustrate that the learning needs and constraints of conversational programmers had some similarities to other adult learners who have rigid schedules <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b59">59</ref>] and prefer informal learning approaches <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b40">41]</ref>. However, we also found some critical differences among these groups of learners. For example, in contrast to enduser programmers who may prefer resources with rich implementation details and "ready-to-go" examples <ref type="bibr" target="#b14">[15]</ref>, conversational programmers found such details to be distracting and preferred to see more conceptual explanations. Although CS teachers also do not need to build artifacts <ref type="bibr" target="#b42">[43]</ref>, they differ from conversational programmers as their needs are still more syntax-oriented-they need to be able to teach lowlevel concepts and create and grade coding assignments.</p><p>In this paper, our main contribution has been in providing novel insights into how a broad range of professionals who Takes too much time: Investing in learning programming ended up requiring more time than what participants wanted to devote given their busy schedules.</p><p>Too much focus on syntax and logic: Most of the resources focused on programming syntax and logic which did not directly help participants with their technical conversations.</p><p>Explanations are not relevant: The conceptual and application-related explanations desired by the participants were not always relevant nor available in the learning resources.</p><p>Difficult to assess the content's reliability: Participants did not feel confident enough to assess whether a given resource contained accurate and reliable content.</p><p>Feelings of social isolation: Resources and environments that target CS students or professional programmers often created feelings of social isolation among participants.</p><p>Easy to forget details: It was easy for participants to forget programming definitions and details because they did not apply what they learned directly on-the-job. Table <ref type="table">3</ref>. Six common reasons for feelings of failure among conversational programmers when using modern resources do not need to write code (e.g., archivist, artist, entrepreneur, psychologist, event manager, medical instructor and visual designer) use formal and informal approaches to learn programming. We have also contributed insights into reasons why modern learning resources fail these conversational programmers in their pursuits to improve technical conversations. We now reflect on the mismatch of expectations that conversational programmers experience and how HCI and learner-centered design <ref type="bibr" target="#b23">[24]</ref> approaches can play a pivotal role in better supporting this emerging learner population.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Mismatch of Expectations</head><p>We learned that although almost all of the conversational programmers in our study were interested in learning programming to improve their conversations, in the end, about 75% of the participants did not feel that they achieved this goal. Their narratives illustrated a mismatch of expectations that manifested in two ways, described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Is programming knowledge even necessary?</head><p>The first mismatch occurred because conversational programmers often assumed that learning programming would help them with grounding in technical conversations. Our participants described their attempts in collectively learning over 20 different programming languages even though they did not need to write any code. However, their descriptions and challenges of technical conversations revealed that these learners were more interested in establishing a conceptual understanding of terminologies, benefits and limitations of technologies, and tradeoffs in software design and implementation decisions. Therefore, is pursuing programming even the right approach for conversational programmers? Future work could investigate why such misconceptions form about programming in the first place. Perhaps with all of the recent excitement around programming for all or computational thinking being popularized in the press <ref type="bibr" target="#b48">[48]</ref>, people tend to associate anything technical with programming <ref type="bibr" target="#b15">[16]</ref>. Another possibility is that people assume that just because they are talking to programmers, they need to understand the "programmers' language". But, the kinds of expertise and vocabulary that developers possess can take years of education or experience to develop, so it is not realistic to expect newcomers to master all the concepts with introductory learning resources.</p><p>On the other hand, if conversational programmers do not learn programming at all, is it even possible for them to understand technical decisions, tradeoffs, or higher-level concepts, such as machine learning or cloud-based architecture? It may be the case that learning the basics of programming and some technical jargon are important dimensions of establishing this common ground that conversational programmers seek to establish <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b60">60]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Is my chosen learning resource even appropriate?</head><p>The second mismatch ensued when conversational programmers interacted with the same modern resources that are typically used by learners who want to eventually build artifacts or solve computational problems. Such resources often fol-low a more structured syntax-oriented curriculum (known as "programming-first approach") of introductory computer science programs in universities <ref type="bibr" target="#b61">[61]</ref>. All of this investment in learning programming through these resources created a rabbit hole effect for conversational programmers as they were led down a path of struggling with programming syntax and all of the other issues that novice programmers encounter <ref type="bibr" target="#b33">[34]</ref> while not getting much direct benefit for improving their technical conversations.</p><p>Still, despite the mismatch in expectations and feelings of failure, the majority of conversational programmers wanted to keep learning programming if appropriate learning resources were available, which suggests that HCI can play a key role in designing suitable learner-centered resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Design Opportunities for Supporting Conversational Programmers</head><p>Here we consider the design implications of our findings and how we can better support conversational programmers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Facilitating Discovery of Relevant and Reliable Content</head><p>Given the challenges that conversational programmers face in spending time on learning resources and in sifting through irrelevant unreliable search results, future research can look facilitating discovery of relevant and reliable content. For example, we can explore how to create Wikipedialike curated overviews with small that are focused on specific application areas. The goal here should be to make them easily "skimmable" in a few minutes-similar approaches have recently been seen in resources such as wik-iHow <ref type="bibr" target="#b62">[62]</ref> that focus on small bite-sized tutorials. How can we create a wikiHow-like site for facilitating discovery of programming concepts, and how would this scale? At the same time, authoritativeness of learning resources is important for this learner population and "trial and error" <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b27">28]</ref> approaches that work for novice or end-user programmers do not work for conversational programmers. These learners may find little success in searching for programming and debugging help in ad-hoc blogs and forums where they can plug-and-play solutions. Instead, conversational programmers can benefit from resources and explanations that are endorsed by leaders in the field to have confidence that they are high-quality materials. There are opportunities for future work to investigate who these leaders would be and how would they make contributions towards endorsing a particular resource.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Explaining Concepts without Syntax and Logic</head><p>A key challenge that our findings raise for the HCI community to consider is, can we actually teach someone useful programming concepts without focusing on syntax and logic? What would that even mean? What would be the advantages or disadvantages of doing so? A popular approach that has been explored in research and practice is the design of novice-friendly "drag-and-drop" <ref type="bibr" target="#b41">[42]</ref> programming languages and systems such as Alice <ref type="bibr" target="#b10">[11]</ref>, Scratch <ref type="bibr" target="#b45">[45]</ref>, and Code.org <ref type="bibr" target="#b63">[63]</ref> to make programming more attractive for children <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b57">57]</ref> and other novices <ref type="bibr" target="#b20">[21]</ref>. How-ever, none of our participants were familiar with such environments and would likely not find them useful for improving their technical conversations because these approaches still largely focus on the mechanics of programming.</p><p>Another approach may be to design courses with emphasis on more conceptual instruction of computing concepts without writing code <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b34">35,</ref><ref type="bibr" target="#b39">40,</ref><ref type="bibr" target="#b56">56]</ref>. For example, Cornell University has recently experimented with a non-programming introduction to CS via concepts, such as in NLP and AI <ref type="bibr" target="#b34">[35]</ref>. It may be possible to extend such an approach outside of the classroom to also teach conversational programmers useful concepts without getting into the mechanics of syntax. Another useful augmentation here may be to teach conversational programmers how to talk about a particular concept in the context of a real-world development scenario. For example, some online dictionaries offer the ability to not just view the definition of a word, but to see how the word may be used in a sentence. It may be fruitful to explore how such interactive reference resources could be created for connecting real-world context with programming-related concepts for conversational programmers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generating Executive Summaries and Visual Explorations</head><p>Given that conversational programmers may only have an ephemeral need to understand and apply some concepts, future research can explore how to design interactive high-level executive summaries or allow for more visual explorations of such concepts. One approach could be presenting a comparative or competitive analysis like an executive report containing the pros and cons to be delivered to a business executive to help them make decisions. For instance, such a summary could make it easy to glance at the pros and cons of neural networks or weigh the benefits of using Amazon's vs. Google's cloud services.</p><p>At the code level, perhaps there is a need for more visual explorations like interactive neural net explorations <ref type="bibr" target="#b4">[5]</ref>, explorable explanations <ref type="bibr" target="#b64">[64]</ref> or algorithm animation <ref type="bibr" target="#b3">[4]</ref> to give learners interactive visual ways to learn to gain intuitions without writing any code, which is similar to the idea of data analysis tools or prototyping tools that allow people to explore ideas and possibilities without writing code <ref type="bibr" target="#b65">[65,</ref><ref type="bibr">66]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Building Conversational Programmers' Own Communities</head><p>We found that conversational programmers expressed feelings of isolation when trying to learn from resources designed for professional or end-user programmers. As discussed above, there is some indication that the recommendations on learning resources from other programmers create a mismatch of expectations. Therefore, it would be worth exploring if the perceptions of conversational programmers would be different if the recommendations came from other conversational programmers similar to them. There is an opportunity here for HCI/CSCW to explore the benefits and drawback of social and personalized recommendations for this learner group.</p><p>One design opportunity may be in creating a welcoming community of like-minded peers and mentors, who are perhaps not the stereotypical computer "geeks" or "insiders" as described by many of our participants. There already are learning communities emerging for certain non-traditional learners, such as scientists <ref type="bibr" target="#b58">[58]</ref>, CS teachers <ref type="bibr" target="#b43">[44]</ref>, and even product managers <ref type="bibr" target="#b8">[9]</ref>. Similarly, we could build conversational programmers' own communities through formal workshops (e.g., dedicated bootcamps) or through online resources and meetups. Learners can receive suggestions and mentorship from experienced conversational programmers who have gone through the same process or are currently going through it. These communities can perhaps evaluate existing resources from the perspective of their domain (e.g., similar work has been done to evaluate programming systems using techniques such as heuristic evaluation <ref type="bibr" target="#b32">[33]</ref> ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Limitations and Future Work</head><p>Our focus was only on perceptions and learning strategies; future work can use controlled studies to formally explore learning outcomes of different interventions and approaches. Although we had a diverse set of participants in terms of job roles and experiences, we did not explore gender, occupation-specific learning goals, or other demographic differences in responses. In addition, since our recruitment criteria explicitly mentioned an attempt to learn programming, we did not have the chance to investigate "conversational technical non-programmers", who did technical communication with programmers but never attempted to learn programming. This population is worthwhile to study in the future.</p><p>More importantly, when we talk about "grounding communication" <ref type="bibr" target="#b9">[10]</ref>, there are actors on sides (technical and non-technical) and our results so far paint a picture from only one side. It should not be solely the job of conversational programmers to make an investment in extra on-the-job learning. Great software engineers should be both productive at the job and good at communicating <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b50">50]</ref>. Moreover, they should not only focus on effectively working with other technical people, but also on better explaining their decisions to people who are non-engineers. Our study opens a path for future research to bridge the gap in technical conversations from developers' perspectives as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONCLUSION</head><p>In conclusion, we have contributed insights from conversational programmers across a wide range of job roles who experience challenges and try to learn programming to improve their conversations. In particular, we have described their learning approaches and struggles and highlighted six reasons why modern resources designed for traditional learners, such as CS students and professional programmers, are not appropriate for this learner population. We have also highlighted ways in which HCI can play a pivotal role in designing learning resources and interactions that are suitable not only for conversational programmers but also other members of society who are increasingly wanting to develop programming and technical literacy.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc></figDesc><table><row><cell></cell><cell>Occupation</cell><cell>ID Age</cell><cell>Occupation</cell><cell>ID Age</cell><cell>Occupation</cell></row><row><cell>P1 31-40F</cell><cell>entrepreneur</cell><cell>P9 19-30F</cell><cell>advertising manager</cell><cell>P17 41-50M</cell><cell>product manager</cell></row><row><cell>P2 19-30M</cell><cell>visual designer</cell><cell>P10 31-40F</cell><cell>health scientist</cell><cell>P18 31-40F</cell><cell>humanities scholar</cell></row><row><cell>P3 41-50F</cell><cell>bank clerk</cell><cell>P11 19-30F</cell><cell>library archivist</cell><cell>P19 19-30F</cell><cell>artist</cell></row><row><cell>P4 41-50F</cell><cell>HR coordinator</cell><cell cols="2">P12 19-30M business assistant (intern)</cell><cell>P20 31-40F</cell><cell>marketing coordinator</cell></row><row><cell>P5 19-30M</cell><cell>helpdesk support (intern)</cell><cell>P13 19-30M</cell><cell>product manager</cell><cell cols="2">P21 19-30M business assistant (intern)</cell></row><row><cell>P6 51-60F</cell><cell>pharmacist</cell><cell>P14 19-30F</cell><cell>HR coordinator</cell><cell>P22 51-60F</cell><cell>medical instructor</cell></row><row><cell cols="5">P7 19-30M business development manager P15 19-30F university administrative staff P23 31-40F</cell><cell>psychologist</cell></row><row><cell>P8 19-30M</cell><cell>marketing coordinator</cell><cell cols="2">P16 19-30M marketing assistant (intern)</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Quora, Reddit, Facebook Groups, Slack Groups) to seek information related to programming. However, participants were not actively involved in typical online communities for developers. For example, most of the participants (18/23) had never used or even heard of Stack Overflow. Among the 16 participants who had tried forums, only 3 participants contributed to it (e.g., posting a thread or replying on others' threads).</figDesc><table><row><cell>Online reference resources: Some participants sought in-</cell></row><row><cell>formation on explanations of terminology and usage of API</cell></row><row><cell>instructions using online reference resources usually suggest-</cell></row><row><cell>ed in search results. Many participants (10/23) visited online</cell></row><row><cell>documentation sites, such as coding reference sites (e.g.,</cell></row><row><cell>W3Schools) and service/product sites (e.g., Amazon Web</cell></row><row><cell>Services). Similarly, Wikipedia was also widely used by par-</cell></row><row><cell>ticipants (9/23), particularly for checking definitions of un-</cell></row><row><cell>familiar terminologies brought up in technical conversations.</cell></row></table><note>. Although our participants were more likely to use informal learning resources, a few participants had invested in even paid formal methods to seek more guided instruction, such as in-person short-term college programming courses (2/23), attending bootcamps or programming workshops (7/23), and signing up for free online courses (6/23) through Lynda.com, Coursera, and CS50 at Harvard. Since our participants had tried many types of informal approaches, we have categorized their top responses below.Forums: Most of the participants (16/23) had come across online forums, such as for specific services, (e.g., Word-Press, Drupal), coding forums (e.g., Microsoft forums) and general-purpose platforms (e.g.,</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Formal approaches In-person courses</head><label></label><figDesc>(e.g., night courses at community colleges) Bootcamps &amp; workshops (e.g., HTML bootcamp; Python oneday workshop) Online courses (e.g., Lynda.com, Coursera, Udacity, edX)</figDesc><table><row><cell>Informal approaches</cell></row><row><cell>Online reference resources (e.g., W3Schools, Wikipedia, com-</cell></row><row><cell>pany's internal references site, specific services such as Drupal )</cell></row><row><cell>Forums (e.g., Reddit, Quora, Stack Overflow, Facebook Groups)</cell></row><row><cell>Online coding tutorials (e.g., Codecademy, FreeCodeCamp)</cell></row><row><cell>Popular press (e.g., Tech Insider; Bloomberg; TechCrunch)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 . Formal and informal resources used by participants and</head><label>2</label><figDesc>could leverage the convenience of distance learning, most participants ended up being busy with their day job and found it difficult to maintain focus and commit time for completion:Iam learning JavaScript in CS50. It's a real Harvard lecture, so you have students from Harvard attending it and they just film the thing. But I have given up on it several times... This is fourth time taking CS50, or fourth time attempting to... Every time I get caught up with other work or I'm too busy. (P7)</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This research was supported in part by the Natural Science and Engineering Research Council of Canada (NSERC). We thank Prashant Shashikumar and Azadeh Zamani Esfahani.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Eliciting Programming Challenges Faced by Developers with Visual Impairments: Exploratory Study</title>
		<author>
			<persName><forename type="first">Khaled</forename><surname>Albusays</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stephanie</forename><surname>Ludi</surname></persName>
		</author>
		<idno type="DOI">10.1145/2897586.2897616</idno>
		<ptr target="https://doi.org/10.1145/2897586.2897616" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE &apos;16</title>
				<meeting>the 9th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE &apos;16</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="82" to="85" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Computer science unplugged:school students doing real computing without computers</title>
		<author>
			<persName><forename type="first">Tim</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Alexander</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Isaac</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mick</forename><surname>Grimley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">New Zealand Journal of Applied Computing and Information Technology</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="20" to="29" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Two Studies of Opportunistic Programming: Interleaving Web Foraging, Learning, and Writing Code</title>
		<author>
			<persName><forename type="first">Joel</forename><surname>Brandt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philip</forename><forename type="middle">J</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joel</forename><surname>Lewenstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mira</forename><surname>Dontcheva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Scott</forename><forename type="middle">R</forename><surname>Klemmer</surname></persName>
		</author>
		<idno type="DOI">10.1145/1518701.1518944</idno>
		<ptr target="https://doi.org/10.1145/1518701.1518944" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;09)</title>
				<meeting>the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;09)</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1589" to="1598" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Algorithm Animation</title>
		<author>
			<persName><forename type="first">H</forename><surname>Marc</surname></persName>
		</author>
		<author>
			<persName><surname>Brown</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Tensorflow -Neural Network Playground</title>
		<author>
			<persName><forename type="first">Shan</forename><surname>Carter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Smilkov</surname></persName>
		</author>
		<ptr target="http://playground.tensorflow.org" />
		<imprint>
			<date type="published" when="2018-01-05">January 5. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Challenging Stereotypes and Changing Attitudes: The Effect of a Brief Programming Encounter on Adults&apos; Attitudes Toward Programming</title>
		<author>
			<persName><forename type="first">Polina</forename><surname>Charters</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">J</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dastyni</forename><surname>Loksa</surname></persName>
		</author>
		<idno type="DOI">10.1145/2538862.2538938</idno>
		<ptr target="https://doi.org/10.1145/2538862.2538938" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 45th ACM Technical Symposium on Computer Science Education (SIGCSE &apos;14)</title>
				<meeting>the 45th ACM Technical Symposium on Computer Science Education (SIGCSE &apos;14)</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="653" to="658" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Perceptions of non-CS majors in intro programming: The rise of the conversational programmer</title>
		<author>
			<persName><forename type="first">K</forename><surname>Parmit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Celena</forename><surname>Chilana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shruti</forename><surname>Alcock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anson</forename><surname>Dembla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ada</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brett</forename><surname>Hurst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philip</forename><forename type="middle">J</forename><surname>Armstrong</surname></persName>
		</author>
		<author>
			<persName><surname>Guo</surname></persName>
		</author>
		<idno type="DOI">10.1109/VLHCC.2015.7357224</idno>
		<ptr target="https://doi.org/10.1109/VLHCC.2015.7357224" />
	</analytic>
	<monogr>
		<title level="m">2015 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)</title>
				<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="251" to="259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Understanding Conversational Programmers: A Perspective from the Software Industry</title>
		<author>
			<persName><forename type="first">K</forename><surname>Parmit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rishabh</forename><surname>Chilana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philip</forename><forename type="middle">J</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><surname>Guo</surname></persName>
		</author>
		<idno type="DOI">10.1145/2858036.2858323</idno>
		<ptr target="https://doi.org/10.1145/2858036.2858323" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems (CHI &apos;16)</title>
				<meeting>the 2016 CHI Conference on Human Factors in Computing Systems (CHI &apos;16)</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1462" to="1472" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Evolution of the Product Manager</title>
		<author>
			<persName><forename type="first">Ellen</forename><surname>Chisa</surname></persName>
		</author>
		<idno type="DOI">10.1145/2674600.2683579</idno>
		<idno>40:40-40:47</idno>
		<ptr target="https://doi.org/10.1145/2674600.2683579" />
	</analytic>
	<monogr>
		<title level="j">Queue</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">American Psychological Association</title>
		<author>
			<persName><forename type="first">H</forename><surname>Herbert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Susan</forename><forename type="middle">E</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><surname>Brennan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Perspectives on Socially Shared Cognition</title>
				<editor>
			<persName><forename type="first">Lauren</forename><surname>Resnick</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">B</forename><surname>Levine</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>John</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Stephanie</forename><surname>Teasley</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename></persName>
		</editor>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="13" to="1991" />
		</imprint>
	</monogr>
	<note>Grounding in Communication</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Alice: A 3-D Tool for Introductory Programming Concepts</title>
		<author>
			<persName><forename type="first">Stephen</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wanda</forename><surname>Dann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Randy</forename><surname>Pausch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth Annual CCSC Northeastern Conference on The Journal of Computing in Small Colleges (CCSC &apos;00)</title>
				<meeting>the Fifth Annual CCSC Northeastern Conference on The Journal of Computing in Small Colleges (CCSC &apos;00)</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="107" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<author>
			<persName><forename type="first">Juliet</forename><surname>Corbin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anselm</forename><surname>Strauss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Basics of Qualitative Research</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Improving Communication Between Pair Programmers Using Shared Gaze Awareness</title>
		<author>
			<persName><forename type="first">D'</forename><surname>Sarah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><surname>Angelo</surname></persName>
		</author>
		<author>
			<persName><surname>Begel</surname></persName>
		</author>
		<idno type="DOI">10.1145/3025453.3025573</idno>
		<ptr target="https://doi.org/10.1145/3025453.3025573" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems (CHI &apos;17)</title>
				<meeting>the 2017 CHI Conference on Human Factors in Computing Systems (CHI &apos;17)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="6245" to="6290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Graphic Designers Who Program as Informal Computer Science Learners</title>
		<author>
			<persName><forename type="first">Brian</forename><surname>Dorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<idno type="DOI">10.1145/1151588.1151608</idno>
		<ptr target="https://doi.org/10.1145/1151588.1151608" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second International Workshop on Computing Education Research (ICER &apos;06)</title>
				<meeting>the Second International Workshop on Computing Education Research (ICER &apos;06)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="127" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Learning on the Job: Characterizing the Programming Knowledge and Learning Strategies of Web Designers</title>
		<author>
			<persName><forename type="first">Brian</forename><surname>Dorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<idno type="DOI">10.1145/1753326.1753430</idno>
		<ptr target="https://doi.org/10.1145/1753326.1753430" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;10)</title>
				<meeting>the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;10)</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="703" to="712" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Maybe Not Everybody Should Learn to Code. Slate. Retrieved</title>
		<author>
			<persName><forename type="first">Chase</forename><surname>Felker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Meg</forename><surname>Charlton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joshua</forename><surname>Oliver</surname></persName>
		</author>
		<ptr target="http://www.slate.com/articles/technology/future_tense/201" />
		<imprint>
			<date type="published" when="2013-01-05">2013. January 5. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">What Are We Doing when We Teach Computing in Schools?</title>
		<author>
			<persName><forename type="first">Sally</forename><surname>Fincher</surname></persName>
		</author>
		<idno type="DOI">10.1145/2742693</idno>
		<ptr target="https://doi.org/10.1145/2742693" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="page" from="24" to="26" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Lessons Learned in the Design and Delivery of an Introductory Programming MOOC</title>
		<author>
			<persName><forename type="first">J</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Fitzpatrick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ákos</forename><surname>Lédeczi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gayathri</forename><surname>Narasimham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lee</forename><surname>Lafferty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Réal</forename><surname>Labrie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><forename type="middle">T</forename><surname>Mielke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aatish</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Katherine</forename><forename type="middle">A</forename><surname>Brady</surname></persName>
		</author>
		<idno type="DOI">10.1145/3017680.3017730</idno>
		<ptr target="https://doi.org/10.1145/3017680.3017730" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;17)</title>
				<meeting>the 2017 ACM SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;17)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="219" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Motivation and Non-Majors in Computer Science: Identifying Discrete Audiences for Introductory Courses</title>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Forte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<idno type="DOI">10.1109/TE.2004.842924</idno>
		<ptr target="https://doi.org/10.1109/TE.2004.842924" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Education</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="248" to="253" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A Concepts-first Introduction to Computer Science</title>
		<author>
			<persName><forename type="first">Kenneth</forename><forename type="middle">J</forename><surname>Goldman</surname></persName>
		</author>
		<idno type="DOI">10.1145/971300.971446</idno>
		<ptr target="https://doi.org/10.1145/971300.971446" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;04)</title>
				<meeting>the 35th SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;04)</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="432" to="436" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Evaluating Assessments of Novice Programming Environments</title>
		<author>
			<persName><forename type="first">Paul</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kris</forename><surname>Powers</surname></persName>
		</author>
		<idno type="DOI">10.1145/1089786.1089796</idno>
		<ptr target="https://doi.org/10.1145/1089786.1089796" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First International Workshop on Computing Education Research (ICER &apos;05)</title>
				<meeting>the First International Workshop on Computing Education Research (ICER &apos;05)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="99" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Older Adults Learning Computer Programming: Motivations, Frustrations, and Design Opportunities</title>
		<author>
			<persName><forename type="first">Philip</forename><forename type="middle">J</forename><surname>Guo</surname></persName>
		</author>
		<idno type="DOI">10.1145/3025453.3025945</idno>
		<ptr target="https://doi.org/10.1145/3025453.3025945" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems (CHI &apos;17)</title>
				<meeting>the 2017 CHI Conference on Human Factors in Computing Systems (CHI &apos;17)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="7070" to="7083" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A Media Computation Course for Non-majors</title>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<idno type="DOI">10.1145/961511.961542</idno>
		<ptr target="https://doi.org/10.1145/961511.961542" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th Annual Conference on Innovation and Technology in Computer Science Education (ITiCSE &apos;03)</title>
				<meeting>the 8th Annual Conference on Innovation and Technology in Computer Science Education (ITiCSE &apos;03)</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="104" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<idno type="DOI">10.2200/S00684ED1V01Y201511HCI033</idno>
		<ptr target="https://doi.org/10.2200/S00684ED1V01Y201511HCI033" />
		<title level="m">Learner-Centered Design of Computing Education: Research on Computing for Everyone. Synthesis Lectures on Human-Centered Informatics</title>
				<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="1" to="165" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Design Process for a Non-majors Computing Course</title>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Forte</surname></persName>
		</author>
		<idno type="DOI">10.1145/1047344.1047468</idno>
		<ptr target="https://doi.org/10.1145/1047344.1047468" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;05)</title>
				<meeting>the 36th SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;05)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="361" to="365" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Learning to Program Using Online Forums: A Comparison of Links Posted on Reddit and Stack Overflow (Abstract Only)</title>
		<author>
			<persName><forename type="first">Carolin</forename><forename type="middle">D</forename><surname>Hardin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthew</forename><surname>Berland</surname></persName>
		</author>
		<idno type="DOI">10.1145/2839509.2851051</idno>
		<ptr target="https://doi.org/10.1145/2839509.2851051" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 47th ACM Technical on Computing Science Education (SIGCSE &apos;16)</title>
				<meeting>the 47th ACM Technical on Computing Science Education (SIGCSE &apos;16)</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="723" to="723" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Learning Programming from Tutorials and Code Puzzles: Children&apos;s Perceptions of Value</title>
		<author>
			<persName><forename type="first">Kyle</forename><forename type="middle">J</forename><surname>Harms</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Evan</forename><surname>Balzuweit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kelleher</forename></persName>
		</author>
		<idno type="DOI">10.1109/VLHCC.2016.7739665</idno>
		<ptr target="https://doi.org/10.1109/VLHCC.2016.7739665" />
	</analytic>
	<monogr>
		<title level="m">2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)</title>
				<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="59" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A Study of Code Design Skills in Novice Programmers Using the SOLO Taxonomy</title>
		<author>
			<persName><forename type="first">Cruz</forename><surname>Izu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amali</forename><surname>Weerasinghe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cheryl</forename><surname>Pope</surname></persName>
		</author>
		<idno type="DOI">10.1145/2960310.2960324</idno>
		<ptr target="https://doi.org/10.1145/2960310.2960324" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 ACM Conference on International Computing Education Research (ICER &apos;16)</title>
				<meeting>the 2016 ACM Conference on International Computing Education Research (ICER &apos;16)</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="251" to="259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Why Coding Bootcamps Don&apos;t</title>
		<author>
			<persName><forename type="first">Geoffrey</forename><surname>James</surname></persName>
		</author>
		<ptr target="https://www.inc.com/geoffrey-james/why-coding-bootcamps-dont-work.html" />
	</analytic>
	<monogr>
		<title level="j">Work. Inc.com</title>
		<imprint>
			<date type="published" when="2017-01-05">2017. January 5. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Supporting Exploratory Programming by Data Scientists</title>
		<author>
			<persName><forename type="first">Mary</forename><surname>Beth Kery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amber</forename><surname>Horvath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brad</forename><surname>Myers</surname></persName>
		</author>
		<idno type="DOI">10.1145/3025453.3025626</idno>
		<ptr target="https://doi.org/10.1145/3025453.3025626" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems (CHI &apos;17)</title>
				<meeting>the 2017 CHI Conference on Human Factors in Computing Systems (CHI &apos;17)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page">1265</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A Pedagogical Analysis of Online Coding Tutorials</title>
		<author>
			<persName><forename type="first">Ada</forename><forename type="middle">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">J</forename><surname>Ko</surname></persName>
		</author>
		<idno type="DOI">10.1145/3017680.3017728</idno>
		<ptr target="https://doi.org/10.1145/3017680.3017728" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;17)</title>
				<meeting>the 2017 ACM SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;17)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="321" to="326" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The State of the Art in End-user Software Engineering</title>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">J</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robin</forename><surname>Abraham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Laura</forename><surname>Beckwith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alan</forename><surname>Blackwell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Margaret</forename><surname>Burnett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><surname>Erwig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chris</forename><surname>Scaffidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Lawrance</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Henry</forename><surname>Lieberman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brad</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><forename type="middle">Beth</forename><surname>Rosson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gregg</forename><surname>Rothermel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><surname>Shaw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Susan</forename><surname>Wiedenbeck</surname></persName>
		</author>
		<idno type="DOI">10.1145/1922649.1922658</idno>
		<ptr target="https://doi.org/10.1145/1922649.1922658" />
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page">44</biblScope>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Heuristic Evaluation for Novice Programming Systems</title>
		<author>
			<persName><forename type="first">Michael</forename><surname>Kölling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fraser</forename><surname>Mckay</surname></persName>
		</author>
		<idno type="DOI">10.1145/2872521</idno>
		<idno>3: 12:1-12:30</idno>
		<ptr target="https://doi.org/10.1145/2872521" />
	</analytic>
	<monogr>
		<title level="j">Trans. Comput. Educ</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A Study of the Difficulties of Novice Programmers</title>
		<author>
			<persName><forename type="first">Essi</forename><surname>Lahtinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kirsti</forename><surname>Ala-Mutka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hannu-Matti</forename><surname>Järvinen</surname></persName>
		</author>
		<idno type="DOI">10.1145/1067445.1067453</idno>
		<ptr target="https://doi.org/10.1145/1067445.1067453" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education (ITiCSE &apos;05)</title>
				<meeting>the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education (ITiCSE &apos;05)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="14" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A Non-Programming Introduction to Computer Science via NLP, IR, and AI</title>
		<author>
			<persName><forename type="first">Lillian</forename><surname>Lee</surname></persName>
		</author>
		<idno type="DOI">10.3115/1118108.1118113</idno>
		<ptr target="https://doi.org/10.3115/1118108.1118113" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACL-02 Workshop on Effective Tools and Methodologies for Teaching Natural Language Processing and Computational Linguistics</title>
				<meeting>the ACL-02 Workshop on Effective Tools and Methodologies for Teaching Natural Language Processing and Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="33" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Comparing the Effectiveness of Online Learning Approaches on CS1 Learning Outcomes</title>
		<author>
			<persName><forename type="first">J</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><surname>Ko</surname></persName>
		</author>
		<idno type="DOI">10.1145/2787622.2787709</idno>
		<ptr target="https://doi.org/10.1145/2787622.2787709" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eleventh Annual International Conference on International Computing Education Research (ICER &apos;15)</title>
				<meeting>the Eleventh Annual International Conference on International Computing Education Research (ICER &apos;15)</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="237" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">What Makes a Great Software Engineer?</title>
		<author>
			<persName><forename type="first">Paul Luo</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">J</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiamin</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 37th International Conference on Software Engineering</title>
				<meeting>the 37th International Conference on Software Engineering</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="700" to="710" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Exploring Online Programming-Related Information Seeking Behaviors via Discussion Forums</title>
		<author>
			<persName><forename type="first">Yihan</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I-Han</forename><surname>Hsiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qi</forename><surname>Li</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICALT.2016.63</idno>
		<ptr target="https://doi.org/10.1109/ICALT.2016.63" />
	</analytic>
	<monogr>
		<title level="m">2016 IEEE 16th International Conference on Advanced Learning Technologies (ICALT</title>
				<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="283" to="287" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Programming by Choice: Urban Youth Learning Programming with Scratch</title>
		<author>
			<persName><forename type="first">John</forename><forename type="middle">H</forename><surname>Maloney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kylie</forename><surname>Peppler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yasmin</forename><surname>Kafai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mitchel</forename><surname>Resnick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Natalie</forename><surname>Rusk</surname></persName>
		</author>
		<idno type="DOI">10.1145/1352135.1352260</idno>
		<ptr target="https://doi.org/10.1145/1352135.1352260" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 39th SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;08)</title>
				<meeting>the 39th SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;08)</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="367" to="371" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Teaching Applied Computing Without Programming: A Case-based Introductory Course for General Education</title>
		<author>
			<persName><forename type="first">Joe</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Henry</forename><surname>Leitner</surname></persName>
		</author>
		<idno type="DOI">10.1145/364447.364547</idno>
		<ptr target="https://doi.org/10.1145/364447.364547" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thirty-second SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;01)</title>
				<meeting>the Thirty-second SIGCSE Technical Symposium on Computer Science Education (SIGCSE &apos;01)</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="80" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Informal and Incidental Learning. New Directions for Adult and Continuing Education</title>
		<author>
			<persName><forename type="first">J</forename><surname>Victoria</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karen</forename><forename type="middle">E</forename><surname>Marsick</surname></persName>
		</author>
		<author>
			<persName><surname>Watkins</surname></persName>
		</author>
		<idno type="DOI">10.1002/ace.5</idno>
		<ptr target="https://doi.org/10.1002/ace.5" />
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="page" from="25" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Blocks-based Programming Languages: Simplifying Programming for Different Audiences with Different Goals</title>
		<author>
			<persName><forename type="first">Paul</forename><surname>Medlock-Walton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kyle</forename><forename type="middle">J</forename><surname>Harms</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eileen</forename><forename type="middle">T</forename><surname>Kraemer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karen</forename><surname>Brennan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Wendel</surname></persName>
		</author>
		<idno type="DOI">10.1145/2538862.2538873</idno>
		<ptr target="https://doi.org/10.1145/2538862.2538873" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 45th ACM Technical Symposium on Computer Science Education (SIGCSE &apos;14)</title>
				<meeting>the 45th ACM Technical Symposium on Computer Science Education (SIGCSE &apos;14)</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="545" to="546" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Who AM I?: Understanding High School Computer Science Teachers&apos; Professional Identity</title>
		<author>
			<persName><forename type="first">Lijun</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<idno type="DOI">10.1145/2157136.2157283</idno>
		<ptr target="https://doi.org/10.1145/2157136.2157283" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43rd ACM Technical Symposium on Computer Science Education (SIGCSE &apos;12)</title>
				<meeting>the 43rd ACM Technical Symposium on Computer Science Education (SIGCSE &apos;12)</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="499" to="504" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Building a Community to Support HS CS Teachers: The Disciplinary Commons for Computing Educators</title>
		<author>
			<persName><forename type="first">Lijun</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Allison</forename><forename type="middle">Elliott</forename><surname>Tew</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Briana</forename><surname>Morrison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ria</forename><surname>Galanos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 42Nd ACM Technical Symposium on Computer Education &apos;11</title>
				<meeting>the 42Nd ACM Technical Symposium on Computer Education &apos;11</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="553" to="558" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title/>
		<idno type="DOI">10.1145/1953163.1953319</idno>
		<ptr target="https://doi.org/10.1145/1953163.1953319" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Scratch: Programming for All</title>
		<author>
			<persName><forename type="first">Mitchel</forename><surname>Resnick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Maloney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrés</forename><surname>Monroy-Hernández</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Natalie</forename><surname>Rusk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Evelyn</forename><surname>Eastmond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karen</forename><surname>Brennan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amon</forename><surname>Millner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Rosenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jay</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Silverman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yasmin</forename><surname>Kafai</surname></persName>
		</author>
		<idno type="DOI">10.1145/1592761.1592779</idno>
		<ptr target="https://doi.org/10.1145/1592761.1592779" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="60" to="67" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">How Well Do Online Forums Facilitate Discussion and Collaboration Among Novice Animation Programmers?</title>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Scaffidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aniket</forename><surname>Dahotre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yan</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="DOI">10.1145/2157136.2157195</idno>
		<ptr target="https://doi.org/10.1145/2157136.2157195" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43rd ACM Technical Symposium on Computer Science Education (SIGCSE &apos;12)</title>
				<meeting>the 43rd ACM Technical Symposium on Computer Science Education (SIGCSE &apos;12)</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="191" to="196" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Estimating the Numbers of End Users and End User Programmers</title>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Scaffidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><surname>Shaw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brad</forename><surname>Myers</surname></persName>
		</author>
		<idno type="DOI">10.1109/VLHCC.2005.34</idno>
		<ptr target="https://doi.org/10.1109/VLHCC.2005.34" />
	</analytic>
	<monogr>
		<title level="m">2005 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC&apos;05)</title>
				<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="207" to="214" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Should Everybody Learn to Code?</title>
		<author>
			<persName><forename type="first">Esther</forename><surname>Shein</surname></persName>
		</author>
		<idno type="DOI">10.1145/2557447</idno>
		<ptr target="https://doi.org/10.1145/2557447" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="page" from="16" to="18" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">What Makes a Good Code Example?: A Study of Programming Q&amp;A in StackOverflow</title>
		<author>
			<persName><forename type="first">Jonathan</forename><surname>Sillito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Frank</forename><surname>Maurer</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICSM.2012.6405249</idno>
		<ptr target="https://doi.org/10.1109/ICSM.2012.6405249" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2012 IEEE International Conference on Software Maintenance (ICSM) (ICSM &apos;12)</title>
				<meeting>the 2012 IEEE International Conference on Software Maintenance (ICSM) (ICSM &apos;12)</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="25" to="34" />
		</imprint>
	</monogr>
	<note>Seyed Mehdi Nasehi, and Chris Burns</note>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Beliefs, Practices, and Personalities of Software Engineers: A Survey in a Large Software Company</title>
		<author>
			<persName><forename type="first">Edward</forename><forename type="middle">K</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christian</forename><surname>Bird</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Zimmermann</surname></persName>
		</author>
		<idno type="DOI">10.1145/2897586.2897596</idno>
		<ptr target="https://doi.org/10.1145/2897586.2897596" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE &apos;16)</title>
				<meeting>the 9th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE &apos;16)</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="15" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">Learner-centered Design: The Challenge for HCI in the 21st Century</title>
		<author>
			<persName><forename type="first">Elliot</forename><surname>Soloway</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Guzdial</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kenneth</forename><forename type="middle">E</forename><surname>Hay</surname></persName>
		</author>
		<idno type="DOI">10.1145/174809.174813</idno>
		<ptr target="https://doi.org/10.1145/174809.174813" />
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="36" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Learning at work: training and development</title>
		<author>
			<persName><forename type="first">Sabine</forename><surname>Sonnentag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cornelia</forename><surname>Niessen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sandra</forename><surname>Ohly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International review of industrial and organizational psychology</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="249" to="290" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Learning Difficulties in Programming Courses: Undergraduates&apos; Perspective and Perception</title>
		<author>
			<persName><forename type="first">Phit-Huan</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Choo-Yee</forename><surname>Ting</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Siew-Woei</forename><surname>Ling</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICCTD.2009.188</idno>
		<ptr target="https://doi.org/10.1109/ICCTD.2009.188" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2009 International Conference on Computer Technology and Development</title>
				<meeting>the 2009 International Conference on Computer Technology and Development</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="volume">01</biblScope>
			<biblScope unit="page" from="42" to="46" />
		</imprint>
	</monogr>
	<note>ICCTD &apos;09</note>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Barriers Faced by Coding Bootcamp Students</title>
		<author>
			<persName><forename type="first">Kyle</forename><surname>Thayer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">J</forename><surname>Ko</surname></persName>
		</author>
		<idno type="DOI">10.1145/3105726.3106176</idno>
		<ptr target="https://doi.org/10.1145/3105726.3106176" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 ACM Conference on International Computing Education Research (ICER &apos;17)</title>
				<meeting>the 2017 ACM Conference on International Computing Education Research (ICER &apos;17)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="245" to="253" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">How Do Programmers Ask and Answer Questions on the Web?</title>
		<author>
			<persName><forename type="first">Christoph</forename><surname>Treude</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ohad</forename><surname>Barzilay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Margaret-Anne</forename><surname>Storey</surname></persName>
		</author>
		<idno type="DOI">10.1145/1985793.1985907</idno>
		<ptr target="https://doi.org/10.1145/1985793.1985907" />
	</analytic>
	<monogr>
		<title level="m">NIER Track). In 2011 33rd International Conference on Software Engineering (ICSE)</title>
				<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="804" to="807" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Is there a role for programming in non-major computer science courses?</title>
		<author>
			<persName><forename type="first">Mark</forename><surname>Urban-Lurain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Donald</forename><forename type="middle">J</forename><surname>Weinshank</surname></persName>
		</author>
		<idno type="DOI">10.1109/FIE.2000.897590</idno>
		<ptr target="https://doi.org/10.1109/FIE.2000.897590" />
	</analytic>
	<monogr>
		<title level="m">30th Annual Frontiers in Education Conference. Building on A Century of Progress in Engineering Education. Conference Proceedings (IEEE Cat</title>
				<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="T2B" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Children learning computer science concepts via Alice game-programming</title>
		<author>
			<persName><forename type="first">Linda</forename><surname>Werner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shannon</forename><surname>Campe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jill</forename><surname>Denner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43rd ACM technical symposium on Computer Science Education</title>
				<meeting>the 43rd ACM technical symposium on Computer Science Education</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="427" to="432" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Software Carpentry: Getting Scientists to Write Better Code by Making Them More Productive</title>
		<author>
			<persName><forename type="first">Greg</forename><surname>Wilson</surname></persName>
		</author>
		<idno type="DOI">10.1109/MCSE.2006.122</idno>
		<ptr target="https://doi.org/10.1109/MCSE.2006.122" />
	</analytic>
	<monogr>
		<title level="j">Computing in Science Engineering</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="66" to="69" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Supporting Adult Learning: Enablers, Barriers, and Services</title>
		<author>
			<persName><forename type="first">Chi</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guangzhi</forename><surname>Zheng</surname></persName>
		</author>
		<idno type="DOI">10.1145/2512276.2512323</idno>
		<ptr target="https://doi.org/10.1145/2512276.2512323" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th Annual ACM SIGITE Conference on Information Technology Education (SIGITE &apos;13)</title>
				<meeting>the 14th Annual ACM SIGITE Conference on Information Technology Education (SIGITE &apos;13)</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="151" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
		<title level="m" type="main">Will Non-Technical Product Managers Become Obsolete?</title>
		<ptr target="https://www.forbes.com/sites/quora/2017/01/03/will-non-technical-product-managers-become-obsolete" />
		<imprint>
			<date type="published" when="2018-01-05">January 5. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title/>
		<ptr target="http://www.acm.org/education/curricula-recommendations" />
	</analytic>
	<monogr>
		<title level="j">ACM Curricula Recommendations</title>
		<imprint>
			<date type="published" when="2018-01-05">January 5. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<monogr>
		<title level="m" type="main">wikiHow How to do anything</title>
		<ptr target="http://www.wikihow.com/Main-Page" />
		<imprint>
			<date type="published" when="2018-01-05">January 5. 2018</date>
		</imprint>
	</monogr>
	<note>Retrieved</note>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title/>
		<ptr target="https://code.org/" />
	</analytic>
	<monogr>
		<title level="j">Anybody can learn | Code.org</title>
		<imprint>
			<date type="published" when="2018-01-05">January 5. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title/>
		<ptr target="http://explorabl.es/" />
	</analytic>
	<monogr>
		<title level="j">Explorable Explanations</title>
		<imprint>
			<date type="published" when="2018-01-05">January 5. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">66. Prototypes, Specifications, and Diagrams in One Tool | Axure Software</title>
		<ptr target="https://www.axure.com/" />
	</analytic>
	<monogr>
		<title level="m">Business Intelligence and Analytics | Tableau Software</title>
				<imprint>
			<date type="published" when="2018-01-05">January 5. 2018. January 5. 2018</date>
		</imprint>
	</monogr>
	<note>Retrieved</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
